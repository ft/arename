# vim:ft=perl
# example arename global hooks file

use ARename qw( register_hook );

sub print_banner0 {
    # Yes, everything handed over to hooks are references.
    # This gives us simple two way communication, but it's
    # also a pretty big hammer. Think before screwing up. :)
    my ($nameref, $verref, $confref, $suptagsref) = @_;

    print "BANNER! $$nameref $$verref\n";

    # The following actually changes the $NAME variable, used
    # in ARename.pl, which doesn't hurt, because it is only the
    # name of the program running. For other hooks there might
    # be vital data in one of the references.
    # If you're not sure about your code debug it *first*.
    # -d (dry-run) is your friend!
    $$nameref =~ s/name/blame/;
}
sub print_banner1 {
    my ($nameref, $verref, $confref, $suptagsref) = @_;

    # Since $NAME used to be 'arename.pl', the substitution
    # in print_banner0() will have changed $NAME to 'areblame.pl',
    # which $$nameref below will reveal.
    print "ANOTHER BANNER! $$nameref $$verref\n";
}

register_hook('startup', \&print_banner0);
register_hook('startup', \&print_banner1);
