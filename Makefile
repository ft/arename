# default installation location:
#   binaries: /usr/local/bin
#   module  : /usr/local/lib/site_perl
prefix="/usr/local"
libpath="lib/site_perl"
install=install
fakeroot="/usr/bin/fakeroot"

# the place where *I* keep the sources of arename's "website".
# The whole updatewebsite-fu is probably not useful for anybody else.
ikiroot=/home/hawk/src/web/ft/comp
ikisubroot=/home/hawk/src/web/subpages.ft/comp/arename

all:
	@printf 'Makefile targets intended for users:\n'
	@printf '  all            this text\n'
	@printf '  install        install both scripts and the module\n'
	@printf '  install-doc    install all documentation\n'
	@printf '  uninstall      remove both scripts and the module again\n'
	@printf '  uninstall-doc  remove the documentation\n'
	@printf '\nAll other targets are not for you. Stay away!\n'

test-help:
	@printf '\nMakefile targets intended for testers:\n'
	@printf 'DO NOT USE THESE UNLESS YOU READ THE '\''TESTINGS'\'' FILE!\n'
	@printf '  test           run the test suite\n'
	@printf '  prepare-test-data\n'
	@printf '                 create audio data for the test suite\n'
	@printf '  input.wav      record an a few seconds long wav file, from\n'
	@printf '                 which .ogg, .flac and .mp3 files will be\n'
	@printf '                 encoded; used by prepare-test-data\n'
	@printf '  test-help      this text\n'
	@printf '\n  Use '\''prove'\'' to run tests individually.\n'

dev-help: all test-help
	@printf '\nMakefile targets intended for developers:\n'
	@printf 'DO NOT USE THESE UNLESS YOU KNOW WHAT YOU ARE DOING!\n'
	@printf '  arename.1      generate manpage\n'
	@printf '  arename.html   generate manpage in html format\n'
	@printf '  doc            generate arename.1 and arename.html\n'
	@printf '  dev-help       this text\n'
	@printf '  clean          clean up working tree\n'
	@printf '  distclean      same as clean, but removes .tars, too\n'
	@printf '  updateweb      update the autogenerated website\n'
	@printf '  removeweb      clean up the website'\''s target directory\n'

doc: arename.1 arename.html

arename.1: arename.pl
	pod2man  ./arename.pl > arename.1    2>/dev/null

arename.html: arename.pl
	pod2html ./arename.pl > arename.html 2>/dev/null
	@rm -f *.tmp

clean:
	rm -f arename.html arename.1 *.tmp .*~ *~ tests/*~
	rm -Rf tests/data

distclean: clean
	rm -f *.tar.gz

install:
	@printf 'Installing arename.pl    to %s\n' "$(prefix)/bin"
	@$(install) -oroot -groot -m0755 -d "$(prefix)/bin"
	@$(install) -oroot -groot -m0755 arename.pl "$(prefix)/bin"
	@printf 'Installing ataglist.pl   to %s\n' "$(prefix)/bin"
	@$(install) -oroot -groot -m0755 ataglist.pl "$(prefix)/bin"
	@printf 'Installing ARename.pm    to %s\n' "$(prefix)/$(libpath)/"
	@$(install) -oroot -groot -m0755 -d "$(prefix)/$(libpath)"
	@$(install) -oroot -groot -m0644 ARename.pm "$(prefix)/$(libpath)"

install-doc: doc
	@printf 'Installing README        to %s\n' "$(prefix)/share/doc/arename"
	@$(install) -oroot -groot -m0755 -d "$(prefix)/share/doc/arename"
	@$(install) -oroot -groot -m0644 README "$(prefix)/share/doc/arename"
	@printf 'Installing LICENCE       to %s\n' "$(prefix)/share/doc/arename"
	@$(install) -oroot -groot -m0644 LICENCE "$(prefix)/share/doc/arename"
	@printf 'Installing CHANGES       to %s\n' "$(prefix)/share/doc/arename"
	@$(install) -oroot -groot -m0644 CHANGES "$(prefix)/share/doc/arename"
	@printf 'Installing arename.html  to %s\n' "$(prefix)/share/doc/arename"
	@$(install) -oroot -groot -m0644 arename.html "$(prefix)/share/doc/arename"
	@printf 'Installing arename.1     to %s\n' "$(prefix)/share/man/man1"
	@$(install) -oroot -groot -m0755 -d "$(prefix)/share/man/man1"
	@$(install) -oroot -groot -m0644 arename.1 "$(prefix)/share/man/man1"
	@printf 'Installing arename.hooks to %s\n' "$(prefix)/share/doc/arename/examples"
	@$(install) -oroot -groot -m0755 -d "$(prefix)/share/doc/arename/examples"
	@$(install) -oroot -groot -m0644 arename.hooks "$(prefix)/share/doc/arename/examples"
	@printf 'Installing _arename      to %s\n' "$(prefix)/share/doc/arename/examples"
	@$(install) -oroot -groot -m0644 _arename "$(prefix)/share/doc/arename/examples"

uninstall:
	@(f="$(prefix)/bin/arename.pl"; printf 'Removing   file: '\''%s'\''\n' "$$f" ; \
	  rm "$$f" || { printf '  Need to become root or file not there?\n' ; exit 1 ; } ; )
	@(f="$(prefix)/bin/ataglist.pl"; printf 'Removing   file: '\''%s'\''\n' "$$f" ; \
	  rm "$$f" || { printf '  Need to become root or file not there?\n' ; exit 1 ; } ; )
	@(f="$(prefix)/$(libpath)/ARename.pm"; printf 'Removing   file: '\''%s'\''\n' "$$f" ; \
	  rm "$$f" || { printf '  Need to become root or file not there?\n' ; exit 1 ; } ; )

uninstall-doc:
	@(d="$(prefix)/share/doc/arename"; printf 'Removing subdir: '\''%s'\''\n' "$$d" ; \
	  rm -R "$$d" || { printf '  Need to become root or directory not there?\n' ; exit 1 ; } ; )
	@(f="$(prefix)/share/man/man1/arename.1"; printf 'Removing   file: '\''%s'\''\n' "$$f" ; \
	  rm "$$f" || { printf '  Need to become root or file not there?\n' ; exit 1 ; } ; )

test: doc
	@[ ! -e tests/data/input.wav ] && { \
	  printf '\n  -- No data; Please read the TESTING file! --\n\n' ; \
	  exit 1 ; \
	} || true
	@( \
	 if [ ! -x "$(fakeroot)" ] ; then \
	  printf 'fakeroot binary (%s) not found. Skipping installation test (see TESTING).\n' "$(fakeroot)" ;\
	  exit 0; \
	 fi ; \
	 "$(fakeroot)" /bin/sh ./tests/inst_t.sh ; \
	)
	perl -MExtUtils::Command::MM -e "test_harness(1, '.')" tests/*.t

prepare-test-data: input.wav
	@(cd tests/data ; \
	 lame -m s -b 192 --noreplaygain input.wav "Foo Bar - Deaftracks - 01. Foo.mp3" ; \
	 oggenc input.wav -b 256 -o "Foo Bar - Deaftracks - 01. Foo.ogg" ; \
	 flac -f input.wav -o "Foo Bar - Deaftracks - 01. Foo.flac" ; \
	 for i in ogg flac mp3 ; do \
	  for j in "Tequilla - Compilation from Hell - 12. Ghost Busters" \
	           "Bazooka George and the Shirt - Bodyfluids - 02. Crap me!" \
	           "My Hands - Bakerstreet - 19. Running all over You" \
	           "Waylon and his Banjo - Red - 01. ...neck love" ; do \
	   cp "Foo Bar - Deaftracks - 01. Foo".$$i "$$j.$$i" ; \
	  done ; \
	 done ; \
	 metaflac \
	  "--no-utf8-convert" \
	  "--set-tag=TRACKNUMBER=02" "--set-tag=TITLE=Crap me!" \
	  "--set-tag=ARTIST=Bazooka George and the Shirt" \
	  "--set-tag=ALBUM=Bodyfluids" "--set-tag=DATE=2006" \
	  "Bazooka George and the Shirt - Bodyfluids - 02. Crap me!.flac" ; \
	 id3v2 \
	  -2 "-t" "Crap me!" "-T" "02" "-a" "Bazooka George and the Shirt" \
	  "-A" "Bodyfluids" "-y" "2006" \
	  "Bazooka George and the Shirt - Bodyfluids - 02. Crap me!.mp3" ; \
	 vorbiscomment \
	  "-w" "-t" "TRACKNUMBER=02" "-t" "TITLE=Crap me!" "-t" \
	  "ARTIST=Bazooka George and the Shirt" "-t" "ALBUM=Bodyfluids" \
	  "-t" "DATE=2006" "Bazooka George and the Shirt - Bodyfluids - 02. Crap me!.ogg" ; \
	 metaflac \
	  "--no-utf8-convert" \
	  "--set-tag=TRACKNUMBER=01" "--set-tag=TITLE=FOO" \
	  "--set-tag=ARTIST=Foo Bar" "--set-tag=ALBUM=Deaftracks" \
	  "--set-tag=DATE=1980" "Foo Bar - Deaftracks - 01. Foo.flac" ; \
	 id3v2 \
	  -2 "-t" "FOO" "-T" "01" "-a" "Foo Bar" "-A" "Deaftracks" \
	  "-y" "1980" "Foo Bar - Deaftracks - 01. Foo.mp3" ; \
	 vorbiscomment \
	  "-w" "-t" "TRACKNUMBER=01" "-t" "TITLE=FOO" "-t" "ARTIST=Foo Bar" \
	  "-t" "ALBUM=Deaftracks" "-t" "DATE=1980" "Foo Bar - Deaftracks - 01. Foo.ogg" ; \
	 metaflac \
	  "--no-utf8-convert" \
	  "--set-tag=TRACKNUMBER=19" \
	  "--set-tag=TITLE=Running all over You" "--set-tag=ARTIST=My Hands" \
	  "--set-tag=ALBUM=Bakerstreet" "--set-tag=DATE=1982" \
	  "My Hands - Bakerstreet - 19. Running all over You.flac" ; \
	 id3v2 \
	  -2 "-t" "Running all over You" "-T" "19" "-a" "My Hands" \
	  "-A" "Bakerstreet" "-y" "1982" \
	  "My Hands - Bakerstreet - 19. Running all over You.mp3" ; \
	 vorbiscomment \
	  "-w" "-t" "ARTIST=My Hands" "-t" "TRACKNUMBER=19" "-t" "TITLE=Running all over You" \
	  "-t" "ALBUM=Bakerstreet" "-t" "DATE=1982" "My Hands - Bakerstreet - 19. Running all over You.ogg" ; \
	 metaflac \
	  "--no-utf8-convert" \
	  "--set-tag=ALBUMARTIST=Various Artists" "--set-tag=TRACKNUMBER=12" \
	  "--set-tag=TITLE=Ghost Busters" "--set-tag=ARTIST=Tequilla" \
	  "--set-tag=ALBUM=Compilation from Hell" "--set-tag=DATE=2008" \
	  "Tequilla - Compilation from Hell - 12. Ghost Busters.flac" ; \
	 id3v2 \
	  -2 "--TPE2" "Various Artists" "-t" "Ghost Busters" "-T" "12" \
	  "-a" "Tequilla" "-A" "Compilation from Hell" "-y" "2008" \
	  "Tequilla - Compilation from Hell - 12. Ghost Busters.mp3" ; \
	 vorbiscomment \
	  "-w" "-t" "TRACKNUMBER=12" "-t" "TITLE=Ghost Busters" "-t" "ARTIST=Tequilla" \
	  "-t" "ALBUMARTIST=Various Artists" "-t" "ALBUM=Compilation from Hell" "-t" "DATE=2008" \
	  "Tequilla - Compilation from Hell - 12. Ghost Busters.ogg" ; \
	 metaflac \
	  "--no-utf8-convert" \
	  "--set-tag=TRACKNUMBER=01" "--set-tag=TITLE=...neck love" \
	  "--set-tag=ARTIST=Waylon and his Banjo" "--set-tag=ALBUM=Red" "--set-tag=DATE=1952" \
	  "Waylon and his Banjo - Red - 01. ...neck love.flac" ; \
	 id3v2 \
	  -2 "-t" "...neck love" "-T" "01" "-a" "Waylon and his Banjo" "-A" "Red" \
	  "-y" "1952" "Waylon and his Banjo - Red - 01. ...neck love.mp3" ; \
	 vorbiscomment \
	  "-w" "-t" "TRACKNUMBER=01" "-t" "TITLE=...neck love" "-t" "ARTIST=Waylon and his Banjo" \
	  "-t" "ALBUM=Red" "-t" "DATE=1952" "Waylon and his Banjo - Red - 01. ...neck love.ogg" ; \
	)

input.wav:
	@(mkdir -p tests/data ; cd tests/data || exit 1 ; \
	 [ ! -e input.wav ] && arecord -d3 -fcd input.wav || true ; \
	)

updateweb:
	@printf 'Updating webpages...\n'
	@./updatewebsite.sh "$(ikiroot)" "$(ikisubroot)"
	make distclean

removeweb:
	@printf 'Remove webpages...\n'
	rm -f "$(ikiroot)"/arename.mdwn "$(ikisubroot)"/*

.PHONY: install install-doc distclean clean all doc
