#compdef arename

# Z-Shell completion function for arename.
# <http://ft.bewatermyfriend.org/comp/arename.html>
#
# Note: The first time this function is called may take longer than the
#       others. The reason for this is that the function asks `arename'
#       about it's supported file types and extensions. These are kept in
#       memory in later calls, so later invocations are instantaneous.
#
# Written by Frank Terbeck <ft@bewatermyfriend.org>.
#
# Distributed with arename, under the same terms as arename itself
# (2-clause BSD); See the LICENCE file which is included in the
# arename distribution.

local line
typeset -ga _arename_types
typeset -ga _arename_extensions

_arename_types=( )
_arename_extensions=( )

arename --list-file-types | while read line; do
    _arename_types+=( "$line" )
done

arename --list-exts-for-type "${(j@,@)_arename_types}" | while read line; do
    _arename_extensions+=( "$line" )
done

function _arename_files() {
    _path_files -g "(#i)*.(${(j:|:)_arename_extensions})(.)" -g "*(-/)"
}

function _arename_comma() {
    local expl tag
    local -a already

    tag="$1"
    shift
    compset -P '*,'
    already=(${(s<,>)IPREFIX})
    _wanted list expl "$tag" compadd -S, -F already -q ${expl} -- "$@"
}

function _arename_types() {
    _arename_comma 'file type' ${_arename_types}
}

function _arename_profiles() {
    _arename_comma 'profile' ${(f)"$(arename --list-profiles)"}
}

function _arename() {
    local -a arguments

    arguments=(
        '--ambiguous-use-first[if a tag has multiple values, use the 1st]:'
        '--compare-versions[compare versions of script and module]:'
        '(--copy -c)'{--copy,-c}'[copy files, rather than rename]'
        '(--debug -D)'{--debug,-D}'[enable debugging output]'
        '(--disable-hooks -H)'{--disable-hooks,-H}'[disable all hooks]'
        '(--disable-profiles -N)'{--disable-profiles,-N}'[disable all profiles]'
        '(--dryrun -d)'{--dryrun,-d}'[go into dry-run mode]'
        '--enable-hooks[enable hooks, if they are disabled in the configuration]'
        '(--force -f)'{--force,-f}'[overwrite file(s) if needed]'
        '(--help -h)'{--help,-h}'[display help information]:'
        '(--list-cfg -L)'{--list-cfg,-L}'[list current configuration]:'
        '--list-file-types[list file types]:'
        '--list-exts-for-type[list extensions for a file type]:file type:_arename_types'
        '(--list-profiles -S)'{--list-profiles,-S}'[list all profiles in active configuration]:'
        '(--verbose --quiet)'--quiet'[enable quiet output]'
        '(--read-local -l)'{--read-local,-l}'[read local config file]'
        '(--stdin -s)'{--stdin,-s}'[read filenames from stdin]'
        '(--verbose --uber-quiet)'--uber-quiet'[do not display skips in quiet mode]'
        '(--quiet --uber-quiet --verbose)'--verbose'[enable verbose output]'
        '(--verbosity -v)'{--verbosity,-v}'[set verbosity]:verbosity value:_guard "[0-9]#" "numeric value"'
        '(--version -V)'{--version,-V}'[display version infomation]:'

        '--rc[read a file instead of ~/.arenamerc]:config file:_files'
        '--post-rc[read a file in addition to ~/.arenamerc]:config file:_files'

        '(--prefix -p)'{--prefix,-p}'[define a directory prefix for destination file(s)]:directory prefix:_path_files -g '\''*(-/)'\'
        '(--profile -P)'{--profile,-P}'[force the use of certain profile(s)]:profile(s):_arename_profiles'

        '(--compilation-template -T)'{--compilation-template,-T}'[define a compilation template]:compilation template:'
        '(--template -t)'{--template,-t}'[define a generic template]:template:'

        '*'{--userset,-u}'[set a user variable]:user variable (format var=value):'

        '*:audio files:_arename_files'
    )

    _arguments -s "${arguments[@]}"
}

_arename "$@"
